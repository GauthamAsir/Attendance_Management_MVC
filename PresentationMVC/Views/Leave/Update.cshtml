@model DataLayer.LeaveTransactionDetail

@{
    ViewBag.Title = "Update Leave";
    if (ViewBag.Role == "Admin")
    {
        Layout = "~/Views/Shared/_AdminDashboard.cshtml";
    }
    else if (ViewBag.Role == "Manager")
    {
        Layout = "~/Views/Shared/_ManagerDashboard.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_UserDashboard.cshtml";
    }
}

<h2>@ViewBag.Title</h2>
<h3 style="color:green">@TempData["Message"]</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="form-group card" style=" margin-top: 32px; padding: 24px; elevation: below; width:fit-content; border-radius: 6px">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control display-content", @readonly = "readonly", @Value = ViewBag.EmployeeId } })
                    @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfRequest, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.DateOfRequest, new { htmlAttributes = new { @class = "form-control display-content", @readonly = "readonly", @Value = DateTime.Now.ToString("yyyy/MM/dd") } })
                    @Html.ValidationMessageFor(model => model.DateOfRequest, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control display-content", id = "startdatePicker", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control display-content", id = "enddatePicker", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control display-content" } })
                    @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-9 col-xs-offset-2">
                    <button type="submit"
                            class="btn btn-primary action-button">
                        @ViewBag.Title
                    </button>
                </div>
            </div>

        </div>

        
    </div>
}

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var d = new Date();
            d.setMonth(d.getMonth() + 1);
            $('#startdatePicker').datepicker({
                dateFormat: "dd/MM/yy",
                changeMonth: true,
                changeYear: true,
                minDate: new Date(),
                yearRange: "-60:+0",
            });
            $('#enddatePicker').datepicker({
                dateFormat: "dd/MM/yy",
                changeMonth: true,
                changeYear: true,
                minDate: new Date(),
                yearRange: "-60:+0",
            });
            $('#startdatePicker').change(function () {
                var dateObject = $("#startdatePicker").datepicker('getDate');
                var d2 = $.datepicker.formatDate('dd/MM/yy', dateObject);
                $('#enddatePicker').datepicker('option', 'minDate', d2);
            });
        });
    </script>
}
